{"version":3,"sources":["../src/GooglePublisherTag.jsx"],"names":["React","PureComponent","Measure","debounce","Format","Dimensions","nextId","getNextId","prepareDimensions","dimensions","format","HORIZONTAL","canBeLower","length","dimension","key","loadScript","js","document","createElement","async","defer","src","body","appendChild","initGooglePublisherTag","options","onInit","path","onImpressionViewable","onSlotRenderEnded","onSlotVisibilityChanged","firstTime","window","googletag","cmd","push","enableSingleRequest","pubads","disableInitialLoad","enableServices","addEventListener","event","slot","getAdUnitPath","GooglePublisherTag","contentRect","setState","bounds","update","props","id","node","state","width","targeting","collapseEmpty","fluid","availableDimensions","filter","find","JSON","stringify","currentTargeting","currentDimensions","removeSlot","adId","innerHTML","defineSlot","Object","keys","forEach","setTargeting","args","Array","isArray","setCollapseEmptyDiv","addService","display","resizeDebounce","componentDidMount","componentWillReceiveProps","componentWillUnmount","destroySlots","refreshSlot","refresh","render","handleResize","measureRef","handleNode","defaultProps","undefined","MOBILE_HORIZONTAL"],"mappings":"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","sourcesContent":["/**\r\n * https://developers.google.com/doubleclick-gpt/reference\r\n*/\r\nimport React, { PureComponent, type Node } from 'react';\r\nimport Measure from 'react-measure';\r\nimport debounce from 'lodash/debounce';\r\nimport Format from './constants/Format';\r\nimport Dimensions from './constants/Dimensions';\r\n\r\nlet nextId: number = 1;\r\n\r\nfunction getNextId(): string {\r\n  nextId += 1;\r\n\r\n  return `rgpt-${nextId}`;\r\n}\r\n\r\nfunction prepareDimensions(\r\n  dimensions,\r\n  format: string = Format.HORIZONTAL,\r\n  canBeLower: boolean = true,\r\n) {\r\n  if (!dimensions || !dimensions.length) {\r\n    return Dimensions[format] || [];\r\n  }\r\n\r\n  if (dimensions.length === 1 && canBeLower) {\r\n    const dimension = dimensions[0];\r\n    const key = `${dimension[0]}x${dimension[1]}`;\r\n\r\n    if (Dimensions[key]) {\r\n      return Dimensions[key] || [];\r\n    }\r\n  }\r\n\r\n  return dimensions;\r\n}\r\n\r\nfunction loadScript(): void {\r\n  const js = document.createElement('script');\r\n  js.async = true;\r\n  js.defer = true;\r\n  js.src = 'https://www.googletagservices.com/tag/js/gpt.js';\r\n\r\n  document.body.appendChild(js);\r\n}\r\n\r\nfunction initGooglePublisherTag(options?: Object = {}, onInit?: Function): void {\r\n  const {\r\n    path,\r\n    onImpressionViewable,\r\n    onSlotRenderEnded,\r\n    onSlotVisibilityChanged,\r\n  } = options;\r\n\r\n  const firstTime = !window.googletag;\r\n\r\n  const googletag = window.googletag = window.googletag || {};\r\n  googletag.cmd = googletag.cmd || [];\r\n\r\n  if (firstTime) {\r\n    googletag.cmd.push(() => {\r\n      if (options.enableSingleRequest) {\r\n        // Infinite scroll requires SRA\r\n        googletag.pubads().enableSingleRequest();\r\n      }\r\n\r\n      // collapse div without ad\r\n      // googletag.pubads().collapseEmptyDivs();\r\n\r\n      // load ad with slot refresh\r\n      googletag.pubads().disableInitialLoad();\r\n\r\n      // enable google publisher tag\r\n      googletag.enableServices();\r\n    });\r\n\r\n    loadScript();\r\n  }\r\n\r\n  // Execute callback when the slot is visible in DOM (thrown before 'impressionViewable' )\r\n  if (onSlotRenderEnded) {\r\n    googletag.cmd.push(() => {\r\n      googletag.pubads().addEventListener('slotRenderEnded', (event) => {\r\n        // check if the current slot is the one the callback was added to\r\n        // (as addEventListener is global)\r\n        if (event.slot.getAdUnitPath() === path) {\r\n          onSlotRenderEnded(event);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Execute callback when ad is completely visible in DOM\r\n  if (onImpressionViewable) {\r\n    googletag.cmd.push(() => {\r\n      googletag.pubads().addEventListener('impressionViewable', (event) => {\r\n        if (event.slot.getAdUnitPath() === path) {\r\n          onImpressionViewable(event);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  // Execute callback whenever the on-screen percentage of an ad slot's area changes\r\n  if (onSlotVisibilityChanged) {\r\n    googletag.cmd.push(() => {\r\n      googletag.pubads().addEventListener('slotVisibilityChanged', (event) => {\r\n        if (event.slot.getAdUnitPath() === path) {\r\n          onSlotVisibilityChanged(event);\r\n        }\r\n      });\r\n    });\r\n  }\r\n\r\n  if (onInit) {\r\n    googletag.cmd.push(() => {\r\n      onInit(googletag);\r\n    });\r\n  }\r\n}\r\n\r\ntype Props = {\r\n  id?: string,\r\n  path: string,\r\n  format?: string,\r\n  canBeLower?: boolean, // can be ad lower than original size,\r\n  enableSingleRequest?: boolean,\r\n  dimensions?: string[], // [[300, 600], [160, 600]]\r\n  targeting?: Object,\r\n  resizeDebounce?: number,\r\n  onSlotRenderEnded?: Function,\r\n  onSlotVisibilityChanged?: Function,\r\n  onImpressionViewable?: Function,\r\n  collapseEmpty?: boolean,\r\n  fluid?: boolean,\r\n};\r\n\r\ntype State = {\r\n  bounds?: {\r\n    width: number,\r\n    height: number,\r\n  }\r\n};\r\n\r\nexport default class GooglePublisherTag extends PureComponent<Props, State> {\r\n  googletag: Object;\r\n  node: Node;\r\n\r\n  state = {};\r\n\r\n  handleResize = (contentRect) => {\r\n    this.setState({\r\n      bounds: contentRect.bounds,\r\n    }, () => {\r\n      this.update(this.props);\r\n    });\r\n  }\r\n\r\n  update = debounce((props: Props) => {\r\n    const {\r\n      id,\r\n      node,\r\n      googletag,\r\n      state: {\r\n        bounds,\r\n      },\r\n    } = this;\r\n\r\n    if (!googletag || !node || !bounds) {\r\n      return;\r\n    }\r\n\r\n    const { width } = bounds;\r\n\r\n    const {\r\n      dimensions,\r\n      format,\r\n      canBeLower,\r\n      targeting,\r\n      collapseEmpty,\r\n      fluid,\r\n    } = props;\r\n\r\n    const availableDimensions = prepareDimensions(dimensions, format, canBeLower)\r\n      .filter(dimension => dimension === 'fluid' || dimension[0] <= width);\r\n\r\n    if (fluid && !availableDimensions.find(dimension => dimension === 'fluid')) {\r\n      availableDimensions.push('fluid');\r\n    }\r\n\r\n    // do nothink\r\n    if (JSON.stringify(targeting) === JSON.stringify(this.currentTargeting)\r\n      && JSON.stringify(availableDimensions) === JSON.stringify(this.currentDimensions)) {\r\n      return;\r\n    }\r\n\r\n    this.currentTargeting = targeting;\r\n    this.currentDimensions = availableDimensions;\r\n\r\n    // remove current slot because dimensions is changed and current slot is old\r\n    this.removeSlot();\r\n\r\n    // there is nothink to display\r\n    if (!availableDimensions || !availableDimensions.length) {\r\n      return;\r\n    }\r\n\r\n    // prepare new node content\r\n    const adId = id || getNextId();\r\n    node.innerHTML = `<div id=\"${adId}\"></div>`;\r\n\r\n    // prepare new slot\r\n    const slot = googletag.defineSlot(props.path, availableDimensions, adId);\r\n    this.slot = slot;\r\n\r\n    // set targeting\r\n    if (targeting) {\r\n      Object.keys(targeting).forEach((key) => {\r\n        slot.setTargeting(key, targeting[key]);\r\n      });\r\n    }\r\n\r\n    // set collapsing\r\n    if (typeof collapseEmpty !== 'undefined') {\r\n      const args = Array.isArray(collapseEmpty)\r\n        ? collapseEmpty\r\n        : [collapseEmpty];\r\n\r\n      slot.setCollapseEmptyDiv(...args);\r\n    }\r\n\r\n    slot.addService(googletag.pubads());\r\n\r\n    // display new slot\r\n    googletag.display(adId);\r\n    //googletag.pubads().refresh([slot]);\r\n  }, this.props.resizeDebounce)\r\n\r\n  componentDidMount() {\r\n    const {\r\n      path,\r\n      onImpressionViewable,\r\n      onSlotRenderEnded,\r\n      onSlotVisibilityChanged,\r\n    } = this.props;\r\n\r\n    const options = {\r\n      path,\r\n      onImpressionViewable,\r\n      onSlotRenderEnded,\r\n      onSlotVisibilityChanged,\r\n    };\r\n\r\n    initGooglePublisherTag(options, (googletag: Object) => {\r\n      this.googletag = googletag;\r\n      this.update(this.props);\r\n    });\r\n  }\r\n\r\n  componentWillReceiveProps(props) {\r\n    this.update(props);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    this.removeSlot();\r\n  }\r\n\r\n  removeSlot() {\r\n    const { slot, googletag, node } = this;\r\n    if (slot && googletag) {\r\n      googletag.destroySlots([slot]);\r\n      this.slot = null;\r\n\r\n      if (node) {\r\n        node.innerHTML = null;\r\n      }\r\n    }\r\n  }\r\n\r\n  refreshSlot() {\r\n    const { slot, googletag } = this;\r\n    if (slot && googletag) {\r\n      googletag.pubads().refresh([slot]);\r\n    }\r\n  }\r\n\r\n  handleNode = (node: Node) => {\r\n    this.node = node;\r\n\r\n    this.update(this.props);\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <Measure onResize={this.handleResize} bounds>\r\n        {({ measureRef }) => (\r\n          <div ref={measureRef}>\r\n            <div ref={this.handleNode} />\r\n          </div>\r\n        )}\r\n      </Measure>\r\n    );\r\n  }\r\n}\r\n\r\nGooglePublisherTag.defaultProps = {\r\n  id: undefined,\r\n  format: Format.MOBILE_HORIZONTAL,\r\n  canBeLower: true,\r\n  enableSingleRequest: false,\r\n  dimensions: undefined,\r\n  targeting: undefined,\r\n  resizeDebounce: 100,\r\n  onSlotRenderEnded: undefined,\r\n  onSlotVisibilityChanged: undefined,\r\n  onImpressionViewable: undefined,\r\n  collapseEmpty: false,\r\n  fluid: false,\r\n};\r\n"],"file":"GooglePublisherTag.js"}